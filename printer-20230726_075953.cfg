[include fluidd.cfg]
[include KAMP/KAMP_Settings.cfg]
[include KAMP/Adaptive_Meshing.cfg]
[include KAMP/Line_Purge.cfg]
[include config_backup.cfg]
#[include adxl.cfg]
# This file contains pin mappings for the stock 2020 Creality Ender 3
# with the 32-bit Creality 4.2.2 board. To use this config, during
# "make menuconfig" select the STM32F103 with a "28KiB bootloader" and
# serial (on USART1 PA10/PA9) communication.
# adapted for my printer ender3-4.2.2
# test
# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 150
position_min: -50

[tmc2209 stepper_x]
uart_pin: PD5
run_current: 0.410

[stepper_y]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC3
position_endstop: 0
position_max: 255
homing_speed: 150
position_min: -50

[tmc2209 stepper_y]
uart_pin: PD0
run_current: 0.410

[stepper_z]
step_pin: PE2
dir_pin: PE3
enable_pin: !PE0
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 240
position_min: -10

[tmc2209 stepper_z]
uart_pin: PE1
run_current: 0.410

[stepper_z1]
step_pin: PD11
dir_pin: PD10
enable_pin: !PD13
microsteps: 16
rotation_distance: 8

[tmc2209 stepper_z1]
uart_pin: PD12
run_current: 0.410

[extruder]
max_extrude_only_distance: 100.0
max_extrude_cross_section: 5
step_pin: PD15
dir_pin: !PD14
enable_pin: !PC7
microsteps: 16
gear_ratio: 42:12
rotation_distance: 25.6
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA2
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_extrude_temp: 170
min_temp: 0
max_temp: 300
pressure_advance: 0.04

[tmc2209 extruder]
uart_pin: PC6
run_current: 0.800

[force_move]
enable_force_move: True

[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[temperature_sensor BTT_Pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor SKR3_EZ]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[fan]
pin: PB6

[mcu]
serial: /dev/serial/by-path/platform-5311400.usb-usb-0:1:1.0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2000
max_z_velocity: 5
max_z_accel: 2000

# Pin mappings for BL_T port
[bltouch]
sensor_pin: ^PC13
control_pin: PE5
pin_move_time: 0.675
pin_up_touch_mode_reports_triggered: False
#z_offset = 0.0
x_offset: -31
y_offset: -41
stow_on_each_sample: True
samples: 1
speed: 5
probe_with_touch_mode: False
sample_retract_dist: 10

[safe_z_home]
home_xy_position: 145,154 # Change coordinates to the center of your print bed
speed: 150
z_hop: 10                 # Move up 10mm
z_hop_speed: 10

[bed_mesh]
speed: 150
horizontal_move_z: 10
mesh_min: 29,30
mesh_max: 199,198
probe_count: 5, 5
algorithm: bicubic
mesh_pps: 2,2
fade_start: 1
fade_end: 10
fade_target: 0
zero_reference_position: 145, 154
move_check_distance: 5
split_delta_z: .025

[exclude_object]

[board_pins]
aliases:
# EXP1 header
  EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE9, EXP1_7=PE11, EXP1_9=<GND>,
  EXP1_2=PB0, EXP1_4=PE8, EXP1_6=PE10, EXP1_8=PE12, EXP1_10=<5V>,
# EXP2 header
  EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4, EXP2_9=<GND>,
  EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
# spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2
encoder_steps_per_detent: 4

[output_pin beeper]
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001

[gcode_macro M300]
gcode:
  ;mario main theme
  {% set tones = [2637, 2637, 1, 2637, 1, 2093, 2637, 1, 3136, 1, 1,  1, 1568, 1, 1, 1, 2093, 1, 1, 1568, 1, 1, 1319, 1, 1, 1760, 1, 1976, 1, 1865, 1760, 1, 1568, 2637, 3136, 3520, 1, 2794, 3136, 1, 2637, 1, 2093, 2349, 1976, 1, 1, 2093, 1, 1,  1568, 1, 1, 1319, 1, 1, 1760, 1, 1976, 1, 1865, 1760, 11568, 2637, 3136, 3520, 1, 2794, 3136, 1, 2637, 1, 2093, 2349, 1976, 1, 1] %} ; S sets the tone frequency

  ;mario underwater
  ;{% set tones = [262, 523, 220, 440, 233, 466, 1, 1, 262, 523, 220, 440, 233, 466, 1, 1, 175, 349, 147, 294, 156, 311, 1, 1, 175, 349, 147, 294, 156, 311, 1, 1, 311, 277, 294, 277, 311, 311, 208, 196, 277, 262, 370, 349, 165, 466, 440, 415, 311, 247, 233, 220, 208, 1, 1, 1] %}

  {% for count in tones %}
    {% set cytime = 1 / count %}
    SET_PIN PIN=beeper VALUE={0.5} CYCLE_TIME={cytime} ;Play tone
    G4 P50 ;tone duration
    SET_PIN PIN=beeper VALUE=0
  {% endfor %}

[neopixel mini12864]
pin: EXP1_6
chain_count: 3
color_order: GRB
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4
# Set RGB values on boot up for each Neopixel.
# Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
  SET_LED LED=mini12864 RED=0 GREEN=0 BLUE=1 INDEX=1 TRANSMIT=0
  SET_LED LED=mini12864 RED=0 GREEN=1 BLUE=0 INDEX=2 TRANSMIT=0
  SET_LED LED=mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 TRANSMIT=0

[neopixel bed_lights]
pin: PE6
chain_count: 8
color_order: RGB
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4

[led_effect printer_idle]
autostart: true
frame_rate: 24
leds:
  neopixel:bed_lights
layers:
  breathing  10 1 top (.5,.5,1)

[led_effect print_done]
autostart: false
frame_rate: 24
leds:
  neopixel:bed_lights
layers:
  breathing  .5 0 screen (0,.1,1), (0,1,.5), (0, 1,1), (0,.1,.5)

[led_effect printing]
autostart: false
frame_rate: 24
leds:
  neopixel:bed_lights
layers:
  static  1 0 top (.5,.5,1)

[led_effect heating]
autostart: false
frame_rate: 24
leds:
  neopixel:bed_lights
layers:
  breathing  10 1 top (0,1,0)

#[firmware_retraction]
#retract_length: 0.4
#retract_speed: 60
#unretract_extra_length: 0.0
#unretract_speed: 40

[screws_tilt_adjust]
screw1: 60,239
screw1_name: rear left screw
screw2: 60,69
screw2_name: front left screw
screw3: 230,69
screw3_name: front right screw
screw4: 230,239
screw4_name: rear right screw
horizontal_move_z: 10
speed: 100
screw_thread: CW-M4

[z_tilt]
z_positions: 230,154
              60,154
points: 230,154
              60,154
speed: 50
horizontal_move_z: 10
retries: 20
retry_tolerance: 0.0025


[gcode_arcs]
resolution = 0.1

[respond]
default_type: echo
default_prefix: 

[input_shaper]
shaper_freq_x: 46.0
shaper_type_x: mzv
shaper_freq_y: 27.2
shaper_type_y: mzv

[gcode_macro TEST]
gcode:
  RESPOND MSG="Start Print"
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  RESPOND MSG="BED_TEMP is "{BED_TEMP}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  RESPOND MSG="EXTRUDER_TEMP is "{EXTRUDER_TEMP}
  {% set EXTRUDER_STANDBY_TEMP = params.EXTRUDER_STANDBY_TEMP|default(150)|float %}
  RESPOND MSG="EXTRUDER_STANDBY_TEMP is "{EXTRUDER_STANDBY_TEMP}
  RESPOND MSG="Done setting temps"


[gcode_macro UNSAFE_RAISE_GANTRY]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F600
  M84

[gcode_macro UNSAFE_LOWER_GANTRY]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z-10 F600
  M84


[gcode_macro START_PRINT]
gcode:
  SET_LED_EFFECT EFFECT=heating REPLACE=1
  RESPOND MSG="Start Print"
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  RESPOND MSG="BED_TEMP is "{BED_TEMP}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  RESPOND MSG="EXTRUDER_TEMP is "{EXTRUDER_TEMP}
  {% set EXTRUDER_STANDBY_TEMP = params.EXTRUDER_STANDBY_TEMP|default(150)|float %}
  RESPOND MSG="EXTRUDER_STANDBY_TEMP is "{EXTRUDER_STANDBY_TEMP}
  RESPOND MSG="Done setting temps, will test CRTouch"
  BLTOUCH_DEBUG command=pin_down
  BLTOUCH_DEBUG command=pin_up
  BLTOUCH_DEBUG command=self_test
  BLTOUCH_DEBUG command=reset
  RESPOND MSG="Done setting testing CRTouch, will setup KAMP"
  ;SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
  ;SETUP_LINE_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1
  
  G90 ; use absolute coordinates
  M83 ; extruder relative mode
  M106 S50 ; Fan on approx. 20% to protect cooling ducts
  M140 S{BED_TEMP} ; set bed temp
  M104 S{EXTRUDER_STANDBY_TEMP} ; set standby extruder temp
  M190 S{BED_TEMP} ; wait for bed temp
  ; M109 S170 ; wait for extruder temp
  G28 ; home all G29 will do the homing
  ;G29 ; calibrate bed mesh levelling
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  M104 S{EXTRUDER_TEMP} ; set first layer extruder temp
  M109 S{EXTRUDER_TEMP} ; wait for extruder temp
  SET_LED_EFFECT EFFECT=printing REPLACE=1
  G1 Y0 ; good place to put brush nozzle.
  LINE_PURGE
  #M220 S150

  
  
[gcode_macro END_PRINT]
gcode:
  
  {% set max_y = printer.toolhead.axis_maximum.y|float %}
  # Move nozzle away from print while retracting
  M83 ; Relative E
  G91 ; Relative XYZ
  G1 X-2 Y-2 Z+5 E-3 F300
  G90 ; Absolute XYZ
  M82 ; Absolute E
  M104 S0 ; turn off temperature
  M140 S0 ; turn off heatbed
  M106 S50 ; Leave fan running to protect cooling ducts.
  # Present print
  G1 X0 Y210 F3000 ; present print
  # Disable steppers
  M84
  BLTOUCH_DEBUG command=pin_down
  BLTOUCH_DEBUG command=pin_up
  BLTOUCH_DEBUG command=self_test
  BLTOUCH_DEBUG command=reset
  SET_LED_EFFECT EFFECT=print_done REPLACE=1 
  M300
  SET_LED_EFFECT EFFECT=printer_idle REPLACE=1 


[gcode_macro G29]
gcode:
 G28
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z5 F4000

[gcode_macro M420]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro M600]
gcode:
  {% set X = params.X|default(50)|float %}
  {% set Y = params.Y|default(0)|float %}
  {% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-50 F1000
  RESTORE_GCODE_STATE NAME=M600_state

[menu __main  __octoprint __poweroff]
type: command
#enable: !toolhead.is_printing
name: Turn off Octopi
gcode:
    {action_respond_info('action:poweroff')}

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL
  SET_LED_EFFECT EFFECT=printer_idle REPLACE=1 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  SET_LED_EFFECT EFFECT=printing REPLACE=1 

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  M104 S0 ; turn off temperature
  M140 S0 ; turn off heatbed
  CANCEL_PRINT_BASE
  SET_LED_EFFECT EFFECT=printer_idle REPLACE=1 


[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.190
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.002
#*# pid_ki = 1.095
#*# pid_kd = 1086.774
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.004
#*# pid_ki = 1.010
#*# pid_kd = 99.018
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.002500, 0.025000, -0.005000
#*# 	  0.037500, -0.005000, -0.025000
#*# 	  -0.012500, -0.000000, -0.030000
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 72.5
#*# max_x = 147.5
#*# min_y = 72.5
#*# max_y = 147.5
